name: Build CI Pipeline

on:
  push:
    branches:
      - main  
jobs:
  project-testing: # Name of the job or that could be any
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Cache pip dependencies 
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install necessary project development dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Download NLTK data
        run: |
          python -m nltk.downloader wordnet

      # - name: Run DVC pipeline
      #   env:
      #     DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
      #   run: |
      #     dvc repro
    
      # - name: Push DVC-tracked data to remote
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: eu-north-1  # Replace with your AWS region
      #   run: |
      #     dvc push

      # - name: Configure Git
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # - name: Add changes to Git
      #   run: |
      #     git add .

      # - name: Commit changes
      #   if: ${{ github.actor != 'github-actions[bot]' }}
      #   run: |
      #     git commit -m "Automated commit of DVC outputs and updated code" || echo "No changes to commit"

      # - name: Push changes
      #   if: ${{ github.actor != 'github-actions[bot]' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     git push origin ${{ github.ref_name }}
      
      - name: Install test dependencies
        run: |
          pip install pytest

      - name: Run model loading test
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          pytest testing.py






